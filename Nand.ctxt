#BlueJ class context
comment0.params=anzahlEingaenge\ delay
comment0.target=Nand(int,\ int)
comment0.text=\r\n\ Konstruktor\ der\ Klasse\ Nand\r\n\ \r\n\r\n\ Der\ Konsturtor\ initalisiert\ die\ Instanz\ einer\ Klasse.\r\n\ \r\n\ @param\ \ \ anzahlEingaenge\ \ \ \ \ Dieser\ Parameter\ gibt\ die\ Anzahl\ der\ Eing\u00E4nge\ dieses\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Gatters\ an.\r\n
comment1.params=welcherEingang\ welchesSignal
comment1.target=void\ setInput(int,\ Signal)
comment1.text=\r\n\ Methode\ setInput\ \r\n\ \r\n\ \r\n\ Diese\ Methode\ belegt\ einen\ gew\u00E4hlten\ Eingang\ mit\ einem\ gew\u00FCnschten\ Signal.\ \r\n\ Desweiteren\ wird\ in\ diesem\ zugeordneten\ Signal\ ein\ Eintrag\ zu\ diesem\ Gatter\ \r\n\ hier\ gemacht,\ damit\ das\ Signal\ dann\ auch\ beim\ Propagieren\ wei\u00DF,\ welche\ Gatter\ \r\n\ neu\ berechnet\ werden\ m\u00FCssen.\r\n\ \r\n\ @param\ \ \ welcherEingang\ \ \ \ \ \ Derjeneige\ Eingang,\ der\ mit\ einem\ gew\u00FCnschten\ Signal\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ belegt\ werden\ soll.\r\n\ @param\ \ \ welchesSignal\ \ \ \ \ \ \ Das\ Signal,\ dass\ auf\ den\ gew\u00FCnschten\ Eingang\ gelegt\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ werden\ soll.\r\n
comment2.params=welchesSignal
comment2.target=void\ setOutput(Signal)
comment2.text=\r\n\ Methode\ setOutput\ \r\n\ \r\n\ \r\n\ Diese\ Methode\ belegt\ den\ Ausgang\ des\ Gatters\ mit\ einem\ gew\u00FCnschten\ Signal.\r\n\ \r\n\ @param\ \ \ welchesSignal\ \ \ \ \ \ \ Das\ Signal,\ dass\ auf\ den\ Ausgang\ gelegt\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ werden\ soll.\ \ \r\n
comment3.params=
comment3.target=void\ berechnen()
comment3.text=\r\n\ Methode\ berechnen\ \r\n\ \r\n\ \r\n\ Diese\ Methode\ berechent\ den\ neuen\ Signalzustand\ des\ Ausgangs\ des\ Gatters.\ Sobald\ \r\n\ ein\ Signal\ eine\ Wertzustands\u00E4nderung\ wiederf\u00E4hrt,\ wird\ aus\ der\ Liste\ der\ \r\n\ angeschlossenen\ Gatter\ des\ Signals\ eine\ Neuberechnung\ eben\ dieser\ angesto\u00DFen.\ Die\ ist\ \r\n\ diese\ Methode\ hier.\ \r\n\ \r\n\ Machart\:\ Bei\ einem\ Nand\ muss\ jeder\ Eingang\ den\ Wert\ true\ tragen,\ damit\ der\ Ausgang\ false\ werden\ kann.\ Dementsprechend\r\n
comment4.params=newValue
comment4.target=void\ bedingtesPropagieren(boolean)
comment4.text=\r\n\ Methode\ bedingtesPropagieren\ \ \r\n
comment5.params=newValue
comment5.target=void\ einschwingen(boolean)
comment5.text=\r\n\ Methode\ einschwingen\ \ \r\n
comment6.params=newValue
comment6.target=void\ createNewEvent(boolean)
comment6.text=\r\n\ Methode\ createNewEvent\ \ \r\n
numComments=7
