#BlueJ class context
comment0.params=
comment0.target=EventQueue()
comment0.text=\r\n\ Konstruktor\ fuer\ Objekte\ der\ Klasse\ Eventqueue\r\n
comment1.params=event
comment1.target=void\ addEvent(Event)
comment1.text=\r\n\ Die\ Methode\ addEvent\ ist\ daf\u00FCr\ zustaendig,\ dass\ die\ Events\ \r\n\ sich\ selber\ in\ die\ Eventqueue\ des\ Projektes\ an\ der\ richtigen\ \r\n\ Stelle\ einsortieren.\r\n
comment2.params=
comment2.target=boolean\ hasMore()
comment2.text=\r\n\ Die\ Methode\ hasMore\ liefert\ eine\ Information,\ ob\ noch\ weitere\ \r\n\ Events\ in\ der\ Eventliste\ enthalten\ sind.\r\n
comment3.params=
comment3.target=Event\ getFirst()
comment3.text=\r\n\ Die\ Methode\ getFirst\ liefert\ das\ n\u00E4chste\ Event\ der\ \r\n\ Eventliste\ zur\u00FCck.\ \r\n
comment4.params=
comment4.target=boolean\ getEventQueueStatus()
comment4.text=\r\n\ Die\ Methode\ getEventQueueStatus\ gibt\ den\ aktuellen\ Status\ \r\n\ der\ Eventqueue\ als\ boolscher\ Wert\ zur\u00FCck.\r\n
comment5.params=
comment5.target=void\ setEventQueueStatusActiv()
comment5.text=\r\n\ Die\ Methode\ setEventQueueStatusActiv\ aktiviert\ die\ Abarbeitung\ \r\n\ der\ Eventqueue.\ Sie\ muss\ fuer\ die\ Findung\ des\ Steadystate-Status\ \r\n\ der\ Schaltung\ deaktiviert\ sein.\r\n
comment6.params=new_actual_time
comment6.target=void\ setNewActualTime(int)
comment6.text=\r\n\ Die\ Methode\ setNewActualTime\ setzt\ die\ aktuelle\ Projektzeit\ \r\n\ auf\ einem\ ihr\ gelieferten\ Wert.\r\n
comment7.params=
comment7.target=void\ removeEvent()
comment7.text=\r\n\ Die\ Methode\ removeEvent\ entfernt\ das\ aktuellste\ Event\ aus\ \r\n\ der\ Eventliste.\r\n
comment8.params=
comment8.target=void\ showCompleteEventList()
comment8.text=\r\n\ Die\ Methode\ showCompleteEventList\ gibt\ auf\ der\ Konsole\ \r\n\ chronologisch\ die\ einsortierten\ Events\ so\ wie\ sie\ in\ der\ \r\n\ Liste\ sthene\ auf\ der\ Konsole\ aus.\r\n
numComments=9
