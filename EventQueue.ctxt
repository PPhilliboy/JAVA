#BlueJ class context
comment0.params=
comment0.target=EventQueue()
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ EventQueue\r\n
comment1.params=newInistatus
comment1.target=void\ setInistatus(boolean)
comment1.text=\r\n\ Methode\ setInistatus\r\n
comment2.params=
comment2.target=boolean\ getInistatus()
comment2.text=\r\n\ Methode\ getInistatus\r\n
comment3.params=newGlobalTime
comment3.target=void\ setGlobalTime(int)
comment3.text=\r\n\ Methode\ setGlobalTime\r\n
comment4.params=
comment4.target=int\ getGlobalTime()
comment4.text=\r\n\ Methode\ getglobalTime\r\n
comment5.params=event
comment5.target=void\ addEvent(Event)
comment5.text=\r\n\ Methode\ addEvent\r\n
comment6.params=
comment6.target=boolean\ hasMore()
comment6.text=\r\n\ Methode\ hasMore\r\n
comment7.params=
comment7.target=Event\ getFirst()
comment7.text=\r\n\ Methode\ getFirst\r\n
comment8.params=
comment8.target=void\ sortiereEventliste()
comment8.text=\r\n\ Methode\ sortiereEventliste\r\n\ \r\n\ Diese\ Methode\ sortiert\ die\ Eventliste\ nach\ dem\ Eventzeitpunkt.\ \r\n\ Es\ wird\ jeweils\ ein\ Paar\ von\ Events\ auf\ ihren\ Eventzeitpunkt\ \r\n\ verglichen,\ sollte\ ein\ Event\ mit\ sp\u00E4terer\ Eventzeit\ als\ das\ \r\n\ darauf\ folgende\ in\ der\ Liste\ stehen,\ werden\ diese\ beiden\ getauscht.\ \r\n\ So\ wandert\ der\ Sortieralgorythmus\ durch\ die\ Eventliste.\ Dieses\ \r\n\ tut\ er\ so\ oft,\ wie\ die\ Liste\ lang\ ist.\ \r\n
comment9.params=event
comment9.target=void\ eventAusgeben(Event)
comment9.text=\r\n\ Methode\ eventAusgeben\r\n
numComments=10
